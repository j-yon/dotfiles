# --[ keymaps ] ------------------------------------------------------------ 
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html

# clear_all_shortcuts yes

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts. Default is ctrl+shift
# super is command on mac
kitty_mod ctrl+shift
map ctrl+w              no_op
map kitty_mod+enter     no_op
map kitty_mod+w         quit

# map ctrl+shift+/ launch --location=hsplit --allow-remote-control kitty +kitten search.py @active-kitty-window-id
# map cmd+/ launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse -i
# map cmd+? launch --type=overlay "$HOME/.config/kitty/kitty_maps.sh"

# Jump words with opt+arrow
map ctrl+, launch --cwd="$HOME/.config/kitty" --type=tab nvim kitty.conf
map kitty_mod+, load_config_file

map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard

# mouse mappings
mouse_map left click ungrabbed mouse_handle_click selection link prompt

# custom processing
# map ctrl+super+p>j kitten hints --customize-processing ~/.dotfiles/config/kitty/json-log-hint.py

# insert url
# map ctrl+super+i>u kitten hints --program -
# insert word
# map ctrl+super+i>w kitten hints --type word --program -
# insert line
# map ctrl+super+i>l kitten hints --type line --program -
# insert path
# map ctrl+super+i>p kitten hints --type path --program -
# insert hash (git commit hash)
# map ctrl+super+i>h kitten hints --type hash --program -
# copy url to clip
# map ctrl+super+y>u kitten hints --program @
# map ctrl+super+y>w kitten hints --type word --program @
# map ctrl+super+y>l kitten hints --type line --program @
# map ctrl+super+y>p kitten hints --type path --program @
# map ctrl+super+y>h kitten hints --type hash --program @

# map ctrl+space>ctrl+g launch --type=overlay gotop
# map ctrl+space>ctrl+h launch --type=overlay htop
# map ctrl+space>ctrl+space launch --type=window zsh -lc kt
# map ctrl+space>ctrl+s launch zsh -lc slck
# map ctrl+space>ctrl+n launch --type=window zsh -lic zknew
# map ctrl+space>ctrl+e launch --type=window zsh -lic "zk edit --interactive"
# map ctrl+space>ctrl+enter launch --type=overlay zsh -ic "~/.dotfiles/bin/kittymux"
# map ctrl+space>ctrl+enter kitten sessioner.py "~/.dotfiles/config/kitty/sessions"

# map ctrl+space>ctrl+b show_scrollback
# map ctrl+space>ctrl+b launch --title "kitty scrollback buffer" --stdin-source=@screen_scrollback --type=overlay nvim -c "set ft=kittybuf | TSBufEnable bash | let g:auto_session_enabled = v:false" -

# -- Window management ----------------------------------------------------- {{{
# movements for nvim in kitty, across splits (like tmux-navigate)
# REF: https://github.com/knubie/vim-kitty-navigator
# map ctrl+space>j kitten pass_keys.py neighboring_window bottom ctrl+j "^.*nvim.*$"
# map ctrl+space>k kitten pass_keys.py neighboring_window top    ctrl+k "^.*nvim.*$"
# map ctrl+space>h kitten pass_keys.py neighboring_window left   ctrl+h "^.*nvim.*$"
# map ctrl+space>l kitten pass_keys.py neighboring_window right  ctrl+l "^.*nvim.*$"

map kitty_mod+;         detach_window ask
map kitty_mod+]         next_window
map kitty_mod+[         previous_window
map kitty_mod+f         move_window_forward
# map super+n             launch --type=os-window --cwd=~/.dotfiles
map kitty_mod+n         launch --type=os-window --cwd=last_reported

# map cmd+d               launch --location=vsplit --cwd=last_reported
# map cmd+shift+d         launch --location=hsplit --cwd=last_reported
# map ctrl+space>d        launch --location=hsplit --cwd=last_reported
# map ctrl+space>ctrl+d   launch --location=vsplit --cwd=last_reported
# }}}

# -- Tab management -------------------------------------------------------- {{{
action_alias            launch_tab launch --type=tab --cwd=last_reported
map alt+l          next_tab
map alt+h          previous_tab
map alt+t          launch --cwd=last_reported --type=tab
map alt+q          close_tab
# map ctrl+space>ctrl+k   close_tab
# map ctrl+space>ctrl+x   close_tab


# map ctrl+space>ctrl+z toggle_layout stack
# map cmd+enter toggle_maximized
# map cmd+shift+enter toggle_layout stack
# map ctrl+space>v launch --location=vsplit zsh

map alt+1 goto_tab 1
map alt+2 goto_tab 2
map alt+3 goto_tab 3
map alt+4 goto_tab 4
map alt+5 goto_tab 5
map alt+6 goto_tab 6
map alt+7 goto_tab 7
map alt+8 goto_tab 8
map alt+9 goto_tab 9

# # tmux {{{
# # NOTE:
# # \x00 -> <C-space> prefix
# # \x01 -> <C-a> prefix
# Open the kitty shell in a new window/tab/overlay/os_window to control kitty using commands.

map kitty_mod+k         kitty_shell window

